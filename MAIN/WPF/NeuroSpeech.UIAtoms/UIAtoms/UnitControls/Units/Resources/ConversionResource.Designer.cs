#if WINRT
#else
#endif
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NeuroSpeech.UIAtoms.UnitControls.Units.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ConversionResource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ConversionResource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("NeuroSpeech.UIAtoms.UnitControls.Units.Resources.ConversionResource", typeof(ConversionResource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Unit
        ///  ID=&quot;radian&quot;
        ///  Name=&quot;Radian&quot;
        ///  Symbol=&quot;rad&quot;
        ///  &gt;
        ///  &lt;Conversions&gt;
        ///    &lt;Conversion ID=&quot;degree&quot; Name=&quot;Degree&quot; SubType=&quot;&quot; Symbol=&quot;°&quot; Factor=&quot;1.745329&quot; Factor10=&quot;-02&quot; /&gt;
        ///    &lt;Conversion ID=&quot;gon&quot; Name=&quot;Gon&quot; SubType=&quot;also called Grade&quot; Symbol=&quot;gon&quot; Factor=&quot;1.570796&quot; Factor10=&quot;-02&quot; /&gt;
        ///    &lt;Conversion ID=&quot;mil&quot; Name=&quot;Mil&quot; SubType=&quot;&quot; Symbol=&quot;mil&quot; Factor=&quot;9.817477&quot; Factor10=&quot;-04&quot; /&gt;
        ///    &lt;Conversion ID=&quot;minute&quot; Name=&quot;Minute&quot; SubType=&quot;&quot; Symbol=&quot;&apos;&quot; Factor=&quot;2.908882&quot; Factor10=&quot;-04&quot; /&gt;
        ///    &lt;Conversion ID=&quot;re [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Angle {
            get {
                return ResourceManager.GetString("Angle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;Unit xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; Name=&quot;Square Meter&quot; Symbol=&quot;m²&quot; ID=&quot;square_meter&quot;&gt;
        ///  &lt;Conversions&gt;
        ///    &lt;Conversion Name=&quot;Acre&quot; Symbol=&quot;acre&quot; ID=&quot;acre&quot; SubType=&quot;based on U.S. survey foot&quot; Factor=&quot;4.046873&quot; Factor10=&quot;3&quot; /&gt;
        ///    &lt;Conversion Name=&quot;Are&quot; Symbol=&quot;a&quot; ID=&quot;are&quot; Factor=&quot;1&quot; Factor10=&quot;2&quot; /&gt;
        ///    &lt;Conversion Name=&quot;Barn&quot; Symbol=&quot;b&quot; ID=&quot;barn&quot; Factor=&quot;1&quot; Factor10=&quot;-28&quot; /&gt;
        ///    &lt;Conversion Name=&quot;Circular Mil&quot; Sy [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Area {
            get {
                return ResourceManager.GetString("Area", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Unit
        ///  ID=&quot;joule&quot;
        ///  Name=&quot;Joule&quot;
        ///  Symbol=&quot;J&quot;
        ///  &gt;
        ///  &lt;Conversions&gt;
        ///    &lt;Conversion ID=&quot;British_Thermal_Unit&quot; Name=&quot;British Thermal Unit&quot; SubType=&quot;IT&quot; Symbol=&quot;Btu&quot; Factor=&quot;1.055056&quot; Factor10=&quot;+03 &quot; /&gt;
        ///    &lt;Conversion ID=&quot;&quot; Name=&quot;&quot; SubType=&quot;&quot; Symbol=&quot;&quot; Factor=&quot;&quot; Factor10=&quot;&quot; /&gt;
        ///    &lt;Conversion ID=&quot;&quot; Name=&quot;&quot; SubType=&quot;&quot; Symbol=&quot;&quot; Factor=&quot;&quot; Factor10=&quot;&quot; /&gt;
        ///    &lt;Conversion ID=&quot;&quot; Name=&quot;&quot; SubType=&quot;&quot; Symbol=&quot;&quot; Factor=&quot;&quot; Factor10=&quot;&quot; /&gt;
        ///    &lt;Conversion ID=&quot;&quot; Name=&quot;&quot; SubType=&quot;&quot; Symbol=&quot;&quot; Factor=&quot;&quot; Factor10=&quot;&quot; / [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Energy {
            get {
                return ResourceManager.GetString("Energy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Unit
        ///  ID=&quot;Meter&quot;
        ///  Name=&quot;Meter&quot;
        ///  Symbol=&quot;m&quot;
        ///  &gt;
        ///  &lt;Conversions&gt;
        ///    &lt;Conversion ID=&quot;Nanometer&quot; Name=&quot;Nanometer&quot; SubType=&quot;&quot; Symbol=&quot;nm&quot; Factor=&quot;1&quot; Factor10=&quot;-9&quot; /&gt;
        ///    &lt;Conversion ID=&quot;Micrometer&quot; Name=&quot;Micrometer&quot; SubType=&quot;&quot; Symbol=&quot;µm&quot; Factor=&quot;1&quot; Factor10=&quot;-6&quot; /&gt;
        ///    &lt;Conversion ID=&quot;Milimeter&quot; Name=&quot;Milimeter&quot; SubType=&quot;&quot; Symbol=&quot;mm&quot; Factor=&quot;1&quot; Factor10=&quot;-3&quot; /&gt;
        ///    &lt;Conversion ID=&quot;Centimeter&quot; Name=&quot;Centimeter&quot; SubType=&quot;&quot; Symbol=&quot;cm&quot; Factor=&quot;1&quot; Factor10=&quot;-2&quot; /&gt;
        ///    &lt;Conversion ID=&quot;Kilometer&quot; Name [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Length {
            get {
                return ResourceManager.GetString("Length", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Unit
        ///  ID=&quot;watt&quot;
        ///  Name=&quot;Watt&quot;
        ///  Symbol=&quot;W&quot;
        ///  &gt;
        ///  &lt;Conversions&gt;
        ///    &lt;Conversion ID=&quot;erg_per_second&quot; Name=&quot;Erg per second&quot; SubType=&quot;&quot; Symbol=&quot;erg/s&quot; Factor=&quot;1.0&quot; Factor10=&quot;-07&quot; /&gt;
        ///    &lt;Conversion ID=&quot;foot_pd-frc_pr_hr&quot; Name=&quot;Foot Pound-Force per hour&quot; SubType=&quot;&quot; Symbol=&quot;ft.lbf/h&quot; Factor=&quot;3.766161&quot; Factor10=&quot;-04&quot; /&gt;
        ///    &lt;Conversion ID=&quot;foot_pd-frc_pr_min&quot; Name=&quot;Foot Pound-Force per minute&quot; SubType=&quot;&quot; Symbol=&quot;ft.lbf/min&quot; Factor=&quot;2.259697&quot; Factor10=&quot;-02&quot; /&gt;
        ///    &lt;Conversion ID=&quot;foot_pd-frc_pr_sec&quot; Name [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Power {
            get {
                return ResourceManager.GetString("Power", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;Unit xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; Name=&quot;Pascal&quot; Symbol=&quot;Pa&quot; ID=&quot;pascal&quot;&gt;
        ///  &lt;Conversions&gt;
        ///    &lt;Conversion Name=&quot;Atmosphere&quot; Symbol=&quot;atm&quot; ID=&quot;atmosphere_standard&quot; SubType=&quot;Standard&quot; Factor=&quot;1.01325&quot; Factor10=&quot;5&quot; /&gt;
        ///    &lt;Conversion Name=&quot;Atmosphere&quot; Symbol=&quot;at&quot; ID=&quot;atmosphere_technical&quot; SubType=&quot;Technical&quot; Factor=&quot;9.80665&quot; Factor10=&quot;4&quot; /&gt;
        ///    &lt;Conversion Name=&quot;Bar&quot; Symbol=&quot;bar&quot; ID=&quot;bar&quot; Factor=&quot;1&quot; Factor10=&quot;5&quot; /&gt;
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Pressure {
            get {
                return ResourceManager.GetString("Pressure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Unit
        ///  ID=&quot;Kelvin&quot;
        ///  Name=&quot;Kelvin&quot;
        ///  Symbol=&quot;K&quot;
        ///  &gt;
        ///  &lt;Conversions&gt;
        ///    &lt;Conversion ID=&quot;Celsius&quot; Name=&quot;Celsius&quot; SubType=&quot;&quot; Symbol=&quot;°C&quot; FormulaFromBase=&quot;input-273.15&quot; FormulaToBase=&quot;input+273.15&quot;/&gt;
        ///    &lt;Conversion ID=&quot;Fahrenheit&quot; Name=&quot;Fahrenheit&quot; SubType=&quot;&quot; Symbol=&quot;°F&quot; FormulaFromBase=&quot;(input-273.15)*1.8+32&quot; FormulaToBase=&quot;(input-32)/1.8+273.15&quot;/&gt;
        ///  &lt;/Conversions&gt;
        ///&lt;/Unit&gt;
        ///.
        /// </summary>
        internal static string Temperature {
            get {
                return ResourceManager.GetString("Temperature", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Unit
        ///  ID=&quot;second&quot;
        ///  Name=&quot;Second&quot;
        ///  Symbol=&quot;s&quot;
        ///  &gt;
        ///  &lt;Conversions&gt;
        ///    &lt;Conversion ID=&quot;day&quot; Name=&quot;Day&quot; SubType=&quot;&quot; Symbol=&quot;d&quot; Factor=&quot;8.64&quot; Factor10=&quot;4&quot; /&gt;
        ///    &lt;Conversion ID=&quot;day_sidereal&quot; Name=&quot;Day&quot; SubType=&quot;sidereal&quot; Symbol=&quot;sidereal&quot; Factor=&quot;8.616409&quot; Factor10=&quot;4&quot; /&gt;
        ///    &lt;Conversion ID=&quot;hour&quot; Name=&quot;Hour&quot; SubType=&quot;&quot; Symbol=&quot;h&quot; Factor=&quot;3.6&quot; Factor10=&quot;3&quot; /&gt;
        ///    &lt;Conversion ID=&quot;hour_sidereal&quot; Name=&quot;Hour&quot; SubType=&quot;sidereal&quot; Symbol=&quot;h&quot; Factor=&quot;3.590170&quot; Factor10=&quot;3&quot; /&gt;
        ///    &lt;Conversion ID=&quot;minute&quot; N [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Time {
            get {
                return ResourceManager.GetString("Time", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;Unit
        ///  ID=&quot;meter_per_second&quot;
        ///  Name=&quot;Meter Per Second&quot;
        ///  Symbol=&quot;m/s&quot;
        ///  &gt;
        ///  &lt;Conversions&gt;
        ///    &lt;Conversion ID=&quot;foot_per_hour&quot; Name=&quot;Foot per hour&quot; SubType=&quot;&quot; Symbol=&quot;ft/h&quot; Factor=&quot;8.466667&quot; Factor10=&quot;-05&quot; /&gt;
        ///    &lt;Conversion ID=&quot;foot_per_minute&quot; Name=&quot;Foot per minute&quot; SubType=&quot;&quot; Symbol=&quot;ft/min&quot; Factor=&quot;5.08&quot; Factor10=&quot;-03&quot; /&gt;
        ///    &lt;Conversion ID=&quot;foot_per_second&quot; Name=&quot;Foot per second&quot; SubType=&quot;&quot; Symbol=&quot;ft/s&quot; Factor=&quot;3.048&quot; Factor10=&quot;-01&quot; /&gt;
        ///    &lt;Conversion ID=&quot;inch_per_second&quot; Name=&quot;Inch per second [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Velocity {
            get {
                return ResourceManager.GetString("Velocity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;Unit xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; Name=&quot;Meter Cubed&quot; Symbol=&quot;m³&quot; ID=&quot;Meter_Cubed&quot;&gt;
        ///  &lt;Conversions&gt;
        ///    &lt;Conversion Name=&quot;Acre-Foot&quot; Symbol=&quot;acre-foot&quot; ID=&quot;acre-foot&quot; SubType=&quot;based on U.S. survey foot&quot; Factor=&quot;1.233489&quot; Factor10=&quot;3&quot; /&gt;
        ///    &lt;Conversion Name=&quot;Barrel&quot; Symbol=&quot;bbl&quot; ID=&quot;barrel&quot; SubType=&quot;for petroleum, 42 gallons U.S.)&quot; Factor=&quot;1.589873&quot; Factor10=&quot;-1&quot; /&gt;
        ///    &lt;Conversion Name=&quot;Bushel&quot; Symbol=&quot;bu&quot; ID=&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Volume {
            get {
                return ResourceManager.GetString("Volume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot;?&gt;
        ///&lt;Unit xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema&quot; Name=&quot;Kilogram&quot; Symbol=&quot;kg&quot; ID=&quot;Kilogram&quot;&gt;
        ///  &lt;Conversions&gt;
        ///    &lt;Conversion Name=&quot;Carat&quot; Symbol=&quot;carat&quot; ID=&quot;carat_metric&quot; SubType=&quot;Metric&quot; Factor=&quot;2&quot; Factor10=&quot;-4&quot; /&gt;
        ///    &lt;Conversion Name=&quot;Grain&quot; Symbol=&quot;gr&quot; ID=&quot;grain&quot; Factor=&quot;2&quot; Factor10=&quot;-1&quot; /&gt;
        ///    &lt;Conversion Name=&quot;Hundredweight&quot; Symbol=&quot;hundredweight&quot; ID=&quot;hundredweight_long_112lb&quot; SubType=&quot;long, 112 lb&quot; Factor=&quot;5.080235&quot; Fac [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Weight {
            get {
                return ResourceManager.GetString("Weight", resourceCulture);
            }
        }
    }
}
